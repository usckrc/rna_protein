strip.text = element_text(size = 12, angle = 0),
panel.spacing = unit(1, "lines")
) +
labs(
title = "Sum of |Delta| Heat Maps",
x = "",
y = "Target",
fill = "|Delta|"
)
# Prepare the data
RPC_1 <- RPC %>%
filter(Metric == "WT vs KO") %>%
mutate(Gene = factor(Gene, levels = rev(unique(Gene))))
# Plot
ggplot(RPC_1, aes(x = Metric, y = Gene, fill = sum_delta)) +
geom_tile() +
geom_segment(  # Add horizontal lines to left edge
aes(x = 0.4, xend = 0.5, y = as.numeric(Gene), yend = as.numeric(Gene)),
color = "gray",
linewidth = 0.3,
inherit.aes = FALSE
) +
scale_fill_viridis(option = "magma", limits = c(0, 1.1)) +
scale_y_discrete(expand = c(7, 0)) +
facet_wrap(~ Metric, scales = "free_x", ncol = 3) +
theme_minimal() +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.y = element_blank(),  # Remove full-width horizontal lines
strip.text = element_text(size = 12, angle = 0),
panel.spacing = unit(1, "lines")
) +
labs(
title = "Sum of |Delta| Heat Maps",
x = "",
y = "Target",
fill = "|Delta|"
)
# Prepare the data
RPC_1 <- RPC %>%
filter(Metric == "WT vs KO") %>%
mutate(Gene = factor(Gene, levels = rev(unique(Gene))))
# Plot
ggplot(RPC_1, aes(x = Metric, y = Gene, fill = sum_delta)) +
geom_tile() +
geom_segment(  # Add horizontal lines to left edge
aes(x = 0.4, xend = 0.5, y = as.numeric(Gene), yend = as.numeric(Gene)),
color = "gray",
linewidth = 0.3,
inherit.aes = FALSE
) +
scale_fill_viridis(option = "magma", limits = c(0, 1.1)) +
scale_y_discrete(expand = c(0, 0)) +
facet_wrap(~ Metric, scales = "free_x", ncol = 3) +
theme_minimal() +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.y = element_blank(),  # Remove full-width horizontal lines
strip.text = element_text(size = 12, angle = 0),
panel.spacing = unit(1, "lines")
) +
labs(
title = "Sum of |Delta| Heat Maps",
x = "",
y = "Target",
fill = "|Delta|"
)
# Prepare the data
RPC_1 <- RPC %>%
filter(Metric == "WT vs KO") %>%
mutate(Gene = factor(Gene, levels = rev(unique(Gene))))
# Plot
ggplot(RPC_1, aes(x = Metric, y = Gene, fill = sum_delta)) +
geom_tile() +
geom_segment(  # Add horizontal lines to left edge
aes(x = 0.4, xend = 0.5, y = as.numeric(Gene), yend = as.numeric(Gene)),
color = "gray",
linewidth = 0.3,
inherit.aes = FALSE
) +
scale_fill_viridis(option = "magma", limits = c(0, 1.1)) +
facet_wrap(~ Metric, scales = "free_x", ncol = 3) +
theme_minimal() +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.y = element_blank(),  # Remove full-width horizontal lines
strip.text = element_text(size = 12, angle = 0),
panel.spacing = unit(1, "lines")
) +
labs(
title = "Sum of |Delta| Heat Maps",
x = "",
y = "Target",
fill = "|Delta|"
)
# Prepare the data
RPC_1 <- RPC %>%
filter(Metric == "WT vs KO") %>%
mutate(Gene = factor(Gene, levels = rev(unique(Gene))))
# Plot
ggplot(RPC_1, aes(x = Metric, y = Gene, fill = sum_delta)) +
geom_tile() +
geom_segment(  # Add horizontal lines to left edge
aes(x = 0.4, xend = 0.5, y = as.numeric(Gene), yend = as.numeric(Gene)),
color = "gray",
linewidth = 0.3,
inherit.aes = FALSE
) +
scale_fill_viridis(option = "magma", limits = c(0, 1.1)) +
#theme_minimal() +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.y = element_blank(),  # Remove full-width horizontal lines
strip.text = element_text(size = 12, angle = 0),
panel.spacing = unit(1, "lines")
) +
labs(
title = "Sum of |Delta| Heat Maps",
x = "",
y = "Target",
fill = "|Delta|"
)
# Prepare the data
RPC_3 <- RPC %>%
filter(Metric == "KO vs KO+A") %>%
mutate(Gene = factor(Gene, levels = rev(unique(Gene))))
# Plot
ggplot(RPC_3, aes(x = Metric, y = Gene, fill = sum_delta)) +
geom_tile() +
geom_segment(   # Add horizontal lines to left edge
aes(x = 0.4, xend = 0.5, y = as.numeric(Gene), yend = as.numeric(Gene)),
color = "gray",
linewidth = 0.3,
inherit.aes = FALSE
) +
scale_fill_viridis(option = "magma", limits = c(0, 1.2)) +
theme_minimal() +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.y = element_blank(),  # Remove full-width horizontal lines
strip.text = element_text(size = 12, angle = 0),
panel.spacing = unit(1, "lines")
) +
labs(
title = "Sum of |Delta| Heat Maps",
x = "",
y = "Target",
fill = "|Delta|"
)
# Define  metrics list
metrics <- c("WT vs KO", "WT vs WT+A", "KO vs KO+A")  # Adjust as needed
# Loop through each metric and plot
for (i in metrics) {
RPC_subset <- RPC %>%
filter(Metric == i) %>%
mutate(Gene = factor(Gene, levels = rev(unique(Gene))))
p1 <- ggplot(RPC_subset, aes(x = Metric, y = Gene, fill = sum_delta)) +
geom_tile() +
geom_segment(  # Add short horizontal lines only on the left
aes(x = 0.4, xend = 0.5, y = as.numeric(Gene), yend = as.numeric(Gene)),
color = "gray",
linewidth = 0.3,
inherit.aes = FALSE
) +
scale_fill_viridis(option = "magma", limits = c(0, 1.1)) +
theme_minimal() +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.y = element_blank(),
strip.text = element_text(size = 12, angle = 0),
panel.spacing = unit(1, "lines")
) +
labs(
title = paste("Sum of |Delta| Heat Map:", i),
x = "",
y = "Target",
fill = "|Delta|"
)
print(p1)
}
merged_df <- full_join(RPC, FCG, by = "Gene")
# Define  metrics list
metrics <- c("WT vs KO", "WT vs WT+A", "KO vs KO+A")  # Adjust as needed
# Loop through each metric and plot
for (i in metrics) {
RPC_subset <- RPC %>%
filter(Metric == i) %>%
mutate(Gene = factor(Gene, levels = rev(unique(Gene))))
p1 <- ggplot(RPC_subset, aes(x = Metric, y = Gene, fill = sum_delta)) +
geom_tile() +
geom_segment(  # Add short horizontal lines only on the left
aes(x = 0.4, xend = 0.5, y = as.numeric(Gene), yend = as.numeric(Gene)),
color = "gray",
linewidth = 0.3,
inherit.aes = FALSE
) +
scale_fill_viridis(option = "magma", limits = c(0, 1.1)) +
theme_minimal() +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.y = element_blank(),
strip.text = element_text(size = 12, angle = 0),
panel.spacing = unit(1, "lines")
) +
labs(
title = paste("Heat Map of |Delta| :", i),
x = "",
y = "Target",
fill = "|Delta|"
)
print(p1)
}
# Define  metrics list
metrics <- c("WT vs KO", "WT vs WT+A", "KO vs KO+A")
# Loop for hm
for (i in metrics) {
RPC_subset <- RPC %>%
filter(Metric == i) %>%
mutate(Gene = factor(Gene, levels = rev(unique(Gene))))
p1 <- ggplot(RPC_subset, aes(x = Metric, y = Gene, fill = sum_delta)) +
geom_tile() +
geom_segment(  # Add  horizontal lines on the left
aes(x = 0.4, xend = 0.5, y = as.numeric(Gene), yend = as.numeric(Gene)),
color = "gray",
linewidth = 0.3,
inherit.aes = FALSE
) +
scale_fill_viridis(
option = "magma",
limits = c(0, 1.1),
breaks = c(0, 0.50, 1)
) +
theme_minimal() +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.y = element_blank(),
strip.text = element_text(size = 12, angle = 0),
panel.spacing = unit(1, "lines")
) +
labs(
title = paste("Heat Map of |Delta| :", i),
x = "",
y = "Target",
fill = "|Delta|"
)
print(p1)
}
# Define  metrics list
metrics <- c("WT vs KO", "WT vs WT+A", "KO vs KO+A")
# Loop for hm
for (i in metrics) {
RPC_subset <- RPC %>%
filter(Metric == i) %>%
mutate(Gene = factor(Gene, levels = rev(unique(Gene))))
p1 <- ggplot(RPC_subset, aes(x = Metric, y = Gene, fill = sum_delta)) +
geom_tile() +
geom_segment(  # Add  horizontal lines on the left
aes(x = 0.4, xend = 0.5, y = as.numeric(Gene), yend = as.numeric(Gene)),
color = "gray",
linewidth = 0.3,
inherit.aes = FALSE
) +
scale_fill_viridis(
option = "magma",
limits = c(0, 1.1),
) +
theme_minimal() +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.y = element_blank(),
strip.text = element_text(size = 12, angle = 0),
panel.spacing = unit(1, "lines")
) +
labs(
title = paste("Heat Map of |Delta| :", i),
x = "",
y = "Target",
fill = "|Delta|"
)
print(p1)
}
View(merged_df)
# filter dfs
filtered_WT_VEH <- RPC %>%
filter(Metric.y == "WT vs WT+A", Metric.x == "WT vs KO")
# filter dfs
filtered_WT_M <- merged_df %>%
filter(Metric.y == "MXY vs FXX", Metric.x == "WT vs KO")
## spearman
cor_result_spearman_WT_M <- cor.test(filtered_WT_M$abs_diff_ko, filtered_WT_M$`Sum Deltas`, method = "spearman")
corr_coeff_spearman_WT_M <- cor_result_spearman_WT_M$estimate
corr_pvalue_spearman_WT_M <- cor_result_spearman_WT_M$p.value
## pearson
cor_result_pearson_WT_M <- cor.test(filtered_WT_M$abs_diff_ko, filtered_WT_M$`Sum Deltas`, method = "pearson")
corr_coeff_pearson_WT_M <- cor_result_pearson_WT_M$estimate
corr_pvalue_pearson_WT_M <- cor_result_pearson_WT_M$p.value
filtered_WT_VEH <- RPC %>%
filter(Metric.y == "WT vs WT+A", Metric.x == "WT vs KO")
View(merged_df)
View(filtered_WT_M)
filtered_WT_VEH <- RPC %>%
filter("WT vs WT+A", "WT vs KO")
filtered_WT_VEH <- RPC %>%
filter(Metric %in% c("WT vs WT+A", "WT vs KO"))
filtered_WT_VEH
View(filtered_WT_VEH)
# filter dfs
filtered_WT_VEH <- RPC %>%
filter(Metric %in% c("WT vs WT+A", "WT vs KO"))
## spearman
cor_result_spearman_WT_VEH <- cor.test(filtered_WT_VEH$abs_diff_ko, filtered_WT_VEH$abs_diff_wt_a, method = "spearman")
# filter dfs
filtered_WT_VEH <- RPC %>%
filter(Metric %in% c("WT vs WT+A", "WT vs KO"))%>%
pivot_wider(names_from = Metric, values_from = sum_delta)
if (!require("tidyr")) {install.packages("tidyr"); require("tidyr")}
filtered_WT_VEH <- RPC %>%
filter(Metric %in% c("WT vs WT+A", "WT vs KO"))%>%
pivot_wider(names_from = Metric, values_from = sum_delta)
View(filtered_WT_VEH)
filtered_WT_VEH <- RPC %>%
filter(Metric %in% c("WT vs WT+A", "WT vs KO"))%>%
select(Gene, Metric, sum_delta) %>%  # keep only relevant columns
pivot_wider(names_from = Metric, values_from = sum_delta)
View(RPC)
cor_result_spearman_WT_VEH <- cor.test(filtered_WT_VEH$abs_diff_ko, filtered_WT_VEH$abs_diff_wt_a, method = "spearman")
cor_result_spearman_WT_VEH <- cor.test(filtered_WT_VEH$`WT vs KO`, filtered_WT_VEH$`WT vs WT+A`, method = "spearman")
cor_result_spearman_WT_VEH
# filter dfs
filtered_WT_VEH <- RPC %>%
filter(Metric %in% c("WT vs WT+A", "WT vs KO"))%>%
select(Gene, Metric, sum_delta) %>%  # keep only relevant columns
pivot_wider(names_from = Metric, values_from = sum_delta)
## spearman
cor_result_spearman_WT_VEH <- cor.test(filtered_WT_VEH$`WT vs KO`, filtered_WT_VEH$`WT vs WT+A`, method = "spearman")
corr_coeff_spearman_WT_VEH <- cor_result_spearman_WT_VEH$estimate
corr_pvalue_spearman_WT_VEH <- cor_result_spearman_WT_VEH$p.value
## pearson
cor_result_pearson_WT_VEH <- cor.test(filtered_WT_VEH$`WT vs KO`, filtered_WT_VEH$`WT vs WT+A`, method = "pearson")
corr_coeff_pearson_WT_VEH <- cor_result_pearson_WT_VEH$estimate
corr_pvalue_pearson_WT_VEH <- cor_result_pearson_WT_VEH$p.value
# spearman plot
ggplot(filtered_WT_VEH,aes(x = `WT vs KO`, y = `WT vs WT+A`)) +
geom_point() +
theme_classic() +
theme(axis.line = element_line(size = 2, colour = "black"),
text = element_text(size=20)) +
labs(
x = "Δ WT v KO",
y = "Δ VEH v ANGII",
title = "Spearman's Correlation between the change in WT v KO and VEH v ANGII"
) +
annotate("text",
x = max(filtered_WT_MXY$`WT vs KO`, na.rm = TRUE),
y = min(filtered_WT_MXY$`WT vs WT+A`, na.rm = TRUE),
label = paste("Correlation coefficient =", round(corr_coeff_spearman_WT_VEH, 2), "\n", "p-value =", round(corr_pvalue_spearman_WT_VEH, 2)),
hjust = 1, vjust = -8, size = 6
) +
geom_text_repel(aes(label = Gene), vjust = -0.5, size = 5)
# spearman plot
ggplot(filtered_WT_VEH,aes(x = `WT vs KO`, y = `WT vs WT+A`)) +
geom_point() +
theme_classic() +
theme(axis.line = element_line(size = 2, colour = "black"),
text = element_text(size=20)) +
labs(
x = "Δ WT v KO",
y = "Δ VEH v ANGII",
title = "Spearman's Correlation between the change in WT v KO and VEH v ANGII"
) +
annotate("text",
x = max(filtered_WT_VEH$`WT vs KO`, na.rm = TRUE),
y = min(filtered_WT_VEH$`WT vs WT+A`, na.rm = TRUE),
label = paste("Correlation coefficient =", round(corr_coeff_spearman_WT_VEH, 2), "\n", "p-value =", round(corr_pvalue_spearman_WT_VEH, 2)),
hjust = 1, vjust = -8, size = 6
) +
geom_text_repel(aes(label = Gene), vjust = -0.5, size = 5)
# pearson plot
ggplot(filtered_WT_VEH,aes(x = `WT vs KO`, y = `WT vs WT+A`)) +
geom_point() +
theme_classic() +
theme(axis.line = element_line(size = 2, colour = "black"),
text = element_text(size=20)) +
labs(
x = "Δ WT vs KO",
y = "Δ VEH v ANGII",
title = "Pearson's Correlation between the change in WT v KO and M v F"
) +
annotate("text",
x = max(filtered_WT_VEH$`WT vs KO`, na.rm = TRUE),
y = min(filtered_WT_VEH$`WT vs WT+A`, na.rm = TRUE),
label = paste("Correlation coefficient =", round(corr_coeff_pearson_WT_VEH, 2), "\n", "p-value =", round(corr_pvalue_pearson_WT_VEH, 2)),
hjust = 1, vjust = -8, size = 6
) +
geom_text_repel(aes(label = Gene), vjust = -0.5, size = 5)
# spearman plot
ggplot(filtered_WT_VEH,aes(x = `WT vs KO`, y = `WT vs WT+A`)) +
geom_point() +
theme_classic() +
theme(axis.line = element_line(size = 2, colour = "black"),
text = element_text(size=20)) +
labs(
x = "Δ WT v KO",
y = "Δ VEH v ANGII",
title = "Spearman's Correlation between the change in WT v KO and VEH v ANGII"
) +
annotate("text",
x = max(filtered_WT_VEH$`WT vs KO`, na.rm = TRUE),
y = min(filtered_WT_VEH$`WT vs WT+A`, na.rm = TRUE),
label = paste("Correlation coefficient =", round(corr_coeff_spearman_WT_VEH, 2), "\n", "p-value =", round(corr_pvalue_spearman_WT_VEH, 2)),
hjust = 1, vjust = -8, size = 6
) +
geom_text_repel(aes(label = Gene), vjust = -0.5, size = 5)
# pearson plot
ggplot(filtered_WT_VEH,aes(x = `WT vs KO`, y = `WT vs WT+A`)) +
geom_point() +
theme_classic() +
theme(axis.line = element_line(size = 2, colour = "black"),
text = element_text(size=20)) +
labs(
x = "Δ WT vs KO",
y = "Δ VEH v ANGII",
title = "Pearson's Correlation between the change in WT v KO and VEH v ANGII"
) +
annotate("text",
x = max(filtered_WT_VEH$`WT vs KO`, na.rm = TRUE),
y = min(filtered_WT_VEH$`WT vs WT+A`, na.rm = TRUE),
label = paste("Correlation coefficient =", round(corr_coeff_pearson_WT_VEH, 2), "\n", "p-value =", round(corr_pvalue_pearson_WT_VEH, 2)),
hjust = 1, vjust = -8, size = 6
) +
geom_text_repel(aes(label = Gene), vjust = -0.5, size = 5)
# spearman plot
ggplot(filtered_WT_M,aes(x = abs_diff_ko, y = `Sum Deltas`)) +
geom_point() +
theme_classic() +
theme(axis.line = element_line(size = 2, colour = "black"),
text = element_text(size=20)) +
labs(
x = "Δ M v F",
y = "Δ WT v KO",
title = "Spearman's Correlation between the change in WT v KO and M v F"
) +
annotate("text",
x = max(filtered_WT_M$abs_diff_ko, na.rm = TRUE),
y = min(filtered_WT_M$`Sum Deltas`, na.rm = TRUE),
label = paste("Correlation coefficient =", round(corr_coeff_spearman_WT_M, 2), "\n", "p-value =", round(corr_pvalue_spearman_WT_M, 2)),
hjust = 1, vjust = -8, size = 6
) +
geom_text_repel(aes(label = Gene), vjust = -0.5, size = 5)
# pearson plot
ggplot(filtered_WT_M,aes(x = abs_diff_ko, y = `Sum Deltas`)) +
geom_point() +
theme_classic() +
theme(axis.line = element_line(size = 2, colour = "black"),
text = element_text(size=20)) +
labs(
x = "Δ M v F",
y = "Δ WT v KO",
title = "Pearson's Correlation between the change in WT v KO and M v F"
) +
annotate("text",
x = max(filtered_WT_M$abs_diff_ko, na.rm = TRUE),
y = min(filtered_WT_M$`Sum Deltas`, na.rm = TRUE),
label = paste("Correlation coefficient =", round(corr_coeff_pearson_WT_M, 2), "\n", "p-value =", round(corr_pvalue_pearson_WT_M, 2)),
hjust = 1, vjust = -8, size = 6
) +
geom_text_repel(aes(label = Gene), vjust = -0.5, size = 5)
# spearman plot
ggplot(filtered_WT_M,aes(x = abs_diff_ko, y = `Sum Deltas`)) +
geom_point() +
theme_classic() +
theme(axis.line = element_line(size = 2, colour = "black"),
text = element_text(size=20)) +
labs(
x = "Δ WT v KO",
y = "Δ M v F",
title = "Spearman's Correlation between the change in WT v KO and M v F"
) +
annotate("text",
x = max(filtered_WT_M$abs_diff_ko, na.rm = TRUE),
y = min(filtered_WT_M$`Sum Deltas`, na.rm = TRUE),
label = paste("Correlation coefficient =", round(corr_coeff_spearman_WT_M, 2), "\n", "p-value =", round(corr_pvalue_spearman_WT_M, 2)),
hjust = 1, vjust = -8, size = 6
) +
geom_text_repel(aes(label = Gene), vjust = -0.5, size = 5)
# pearson plot
ggplot(filtered_WT_M,aes(x = abs_diff_ko, y = `Sum Deltas`)) +
geom_point() +
theme_classic() +
theme(axis.line = element_line(size = 2, colour = "black"),
text = element_text(size=20)) +
labs(
x = "Δ WT v KO",
y = "Δ M v F",
title = "Pearson's Correlation between the change in WT v KO and M v F"
) +
annotate("text",
x = max(filtered_WT_M$abs_diff_ko, na.rm = TRUE),
y = min(filtered_WT_M$`Sum Deltas`, na.rm = TRUE),
label = paste("Correlation coefficient =", round(corr_coeff_pearson_WT_M, 2), "\n", "p-value =", round(corr_pvalue_pearson_WT_M, 2)),
hjust = 1, vjust = -8, size = 6
) +
geom_text_repel(aes(label = Gene), vjust = -0.5, size = 5)
